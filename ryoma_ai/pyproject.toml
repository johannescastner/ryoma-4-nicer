[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "ryoma_ai"
version = "0.0.1"
description = "AI Powered Data Platform"
readme = "README.md"
authors = ["ryoma <contact@project-ryoma.com>"]
license = "Apache Software License 2.0"
repository = "https://github.com/project-ryoma/ryoma"
homepage = "https://www.project-ryoma.com"

keywords = ["Artificial Intelligence", "Data Analysis", "Code Generation"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "License :: OSI Approved :: Apache Software License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
]

packages = [
    { include = "ryoma_ai" }
]

[tool.poetry.dependencies]
python = "^3.9"
mock = "^5.1.0"
openai = "^1.33.0"
pydantic = "^2.7.1"
jupyter-ai-magics = "^2.19.0"
pandas = "^2.2.2"
langchain-openai = "^0.1.7"
langchain = "^0.2.9"
langgraph = "^0.1.9"
ipython = "8.14.0"
pyarrow = "^16.1.0"
typer = "^0.12.3"
types-setuptools = "^70.0.0.20240524"

[tool.mypy]
allow_redefinition = false
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
ignore_missing_imports = true
implicit_reexport = false
no_implicit_optional = true
show_column_numbers = true
show_error_codes = true
show_error_context = true
strict_equality = true
strict_optional = true
warn_no_return = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
warn_unused_configs = true
warn_unused_ignores = true


[tool.pytest.ini_options]
norecursedirs = ["hooks", "*.egg", ".eggs", "dist", "build", "docs", ".tox", ".git", "__pycache__"]
doctest_optionflags = ["NUMBER", "NORMALIZE_WHITESPACE", "IGNORE_EXCEPTION_DETAIL"]
addopts = [
    "--strict-markers",
    "--tb=short",
    "--doctest-modules",
    "--doctest-continue-on-failure",
]

[tool.coverage.run]
source = ["tests"]

[coverage.paths]
source = "ryoma"

[coverage.run]
branch = true

[coverage.report]
fail_under = 50
show_missing = true
